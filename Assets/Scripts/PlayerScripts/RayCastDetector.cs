using System;
using System.Collections.Generic;
using UnityEngine;

public class RayCastDetector : MonoBehaviour
{
    //--------------------------------------------------------------------------------------------------------------------------------------------//
    //--------------------------------------------------------------------------------------------------------------------------------------------//

    [SerializeField] private Transform followPlayer;

    //--------------------------------------------------------------------------------------------------------------------------------------------//
    //--------------------------------------------------------------------------------------------------------------------------------------------//

    [SerializeField] private float maxRayDistance;
    [SerializeField]private float jumpHeight = 0f;

    //--------------------------------------------------------------------------------------------------------------------------------------------//
    //--------------------------------------------------------------------------------------------------------------------------------------------//

    [SerializeField] private LayerMask bodyLayer;

    //--------------------------------------------------------------------------------------------------------------------------------------------//
    //--------------------------------------------------------------------------------------------------------------------------------------------//

    private bool isPlayerBodyDetected = false;
    private bool isBonusLevelStarted = false;

    //--------------------------------------------------------------------------------------------------------------------------------------------//
    //--------------------------------------------------------------------------------------------------------------------------------------------//

    private void OnEnable()
    {
        AttechBodyWithPlayer.OnAttach += StartCheckingBody;
        BodyBehaviour.OnBodyDeteched += decreseheight;
        GameManager.OnGameStateChanged += BonusLevel;
    }

    private void BonusLevel(GameState state)
    {
        if(state == GameState.bonus)
        {
            isBonusLevelStarted = true;

        }
    }

    //--------------------------------------------------------------------------------------------------------------------------------------------//
    //--------------------------------------------------------------------------------------------------------------------------------------------//


    private void decreseheight()
    {
        jumpHeight -= 0.5f;
    }

    //--------------------------------------------------------------------------------------------------------------------------------------------//
    //--------------------------------------------------------------------------------------------------------------------------------------------//

    private void StartCheckingBody()
    {
        isPlayerBodyDetected = false;

    }

    //--------------------------------------------------------------------------------------------------------------------------------------------//
    //--------------------------------------------------------------------------------------------------------------------------------------------//

    void Update()
    {
        transform.position = new Vector3(followPlayer.position.x, 0f, followPlayer.position.z+0.5f);

        forwardRayCastDetector();

    }

    //--------------------------------------------------------------------------------------------------------------------------------------------//
    //--------------------------------------------------------------------------------------------------------------------------------------------//

    private void forwardRayCastDetector()
    {

        RaycastHit hit;

        if (Physics.Raycast(transform.position, Vector3.forward, out hit, maxRayDistance, bodyLayer))
        {
            if (!isPlayerBodyDetected)
            {

                string currentBodyId = hit.collider.name;
                isPlayerBodyDetected = true;
                    jumpHeight += hit.transform.GetComponent<BodyBehaviour>().jumpHeight;

            }
                      
        }

        if (!isBonusLevelStarted)
        {
            GridMovement.instance.currentGridPosition = new Vector3((int)followPlayer.position.x, jumpHeight, (int)followPlayer.position.z);
        }
        else
        {
            GridMovement.instance.currentGridPosition = new Vector3((int)0, jumpHeight, (int)followPlayer.position.z);
        }

    }



    //--------------------------------------------------------------------------------------------------------------------------------------------//
    //--------------------------------------------------------------------------------------------------------------------------------------------//

    private void OnDisable()
    {
        AttechBodyWithPlayer.OnAttach -= StartCheckingBody;
        BodyBehaviour.OnBodyDeteched -= decreseheight;
    }

    //--------------------------------------------------------------------------------------------------------------------------------------------//
    //--------------------------------------------------------------------------------------------------------------------------------------------//

}